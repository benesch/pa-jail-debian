#! /bin/sh
if ! expr "$0" : '.*[/]' >/dev/null; then PROGDIR=./
else PROGDIR=`echo "$0" | sed 's,^\(.*/\)[^/]*$,\1,'`; fi
expr "$PROGDIR" : '[/]' >/dev/null || PROGDIR="`pwd`/$PROGDIR"
PROGDIR=`echo "$PROGDIR" | sed 's,/$,,'`
LIBDIR="$PROGDIR/../lib/"
. ${LIBDIR}dbhelper.sh

usage () {
    echo "Usage: gitexecjail [-u USERNAME] [-p PSET | -H COMMIT] [-s SUBDIR] \\" 1>&2
    echo "           [-c CACHEID] REPOID DIR OVERLAY [JAILFILES [COMMAND...]]" 1>&2
    if [ -n "$1" ]; then exit $1; else exit 1; fi
}

test -z "$GITSSH_REPOCACHE" && GITSSH_REPOCACHE="${MAINDIR}repo"
if [ ! -d "$GITSSH_REPOCACHE" ]; then
    echo "Bad GITSSH_REPOCACHE" 1>&2
    usage 1
fi

username=jail61user
subdirarg=
while expr "$1" : '-' >/dev/null; do
    case "$1" in
        -u)
            test -n "$2" || usage; username="$2"; shift 2;;
        -u*)
            username="`echo "$1" | sed 's,^..,,'`"; shift;;
        -p)
            test -n "$2" || usage; pset="$2"; shift 2;;
        -p*)
            pset="`echo "$1" | sed 's,^..,,'`"; shift;;
        -c)
            test -n "$2" || usage; cacheid="$2"; shift 2;;
        -c*)
            cacheid="`echo "$1" | sed 's,^..,,'`"; shift;;
        -H)
            test -n "$2" || usage; commit="$2"; shift 2;;
        -H*)
            commit="`echo "$1" | sed 's,^..,,'`"; shift;;
        -l)
            test -n "$2" || usage; linkdir="$2"; shift 2;;
        -l*)
            linkdir="`echo "$1" | sed 's,^..,,'`"; shift;;
        -s)
            test -n "$2" || usage; subdirarg="-s$2"; shift 2;;
        -s*)
            subdirarg="-s`echo "$1" | sed 's,^..,,'`"; shift;;
        --help)
            usage 0;;
        *)
            usage 1;;
    esac
done

test "$#" != 3 -a "$#" != 5 && usage 1
repoid="$1"; dir="$2"; overlaytarball="$3"; jailfiles="$4"; command="$5"
expr "$repoid" : '.*[^0-9]' >/dev/null && usage 1
expr "$pset" : '.*[^0-9]' >/dev/null && usage 1
expr "$subdirarg" : '.*[^-_0-9.a-zA-Z/]' >/dev/null && usage 1
expr "$username" : '.*[^_0-9a-zA-Z]' >/dev/null && usage 1
test -z "$username" && usage 1

if [ -z "$cacheid" ]; then
    cacheid=`echo "select r.cacheid from Repository r where r.repoid=$repoid" |
	${LIBDIR}runsql.sh -N`
fi
if [ -z "$commit" ]; then
    test -z "$pset" && pset=-1
    commit=`echo "select coalesce(rg.gradehash,r.snaphash) from Repository r left join RepositoryGrade rg on (rg.repoid=r.repoid and rg.pset=$pset and not rg.placeholder) where r.repoid=$repoid" |
	${LIBDIR}runsql.sh -N`
fi

repo_dir="$GITSSH_REPOCACHE/repo$cacheid"
if [ -z "$cacheid" -o ! -d "$repo_dir" ]; then
    echo "$repo_dir: Repository directory does not exist" 1>&2
    exit 1
fi
if [ -z "$commit" ]; then
    echo "$repo_dir: Cannot find commit" 1>&2
    exit 1
fi

set_times () {
    now=`date '+%Y%m%d.%H%M%S<%s>%d/%b/%Y:%H:%M:%S %z'`
    snapnow=`echo $now | sed 's/<.*//'`
    snaptime=`echo $now | sed 's/.*<\(.*\)>.*/\1/'`
    snaplong=`echo $now | sed 's/.*>//'`
}

set_times
while test -d "$dir" || ! mkdir -m 0755 "$dir"; do
    ${SRCDIR}execjail -m "$dir" "${dir}~.$snapnow" || exit 1
    ${SRCDIR}execjail -d "${dir}~.$snapnow" &
    set_times
done

jail61home=`grep ^$username: /etc/passwd | cut -d: -f6`
test -z "$jail61home" && jail61home=/home/jail61
if ! ${SRCDIR}gitcheckoutinto $subdirarg "${dir}${jail61home}/repo" "$cacheid" "$commit" "$overlaytarball"; then
    echo "gitcheckoutinto failed"; exit 1
fi

if [ -z "$command" ]; then exit; fi

echo "gitexecjail $repoid $commit"
if [ -n "$linkdir" ]; then
    echo "${SRCDIR}/execjail -t -l \"$linkdir\" \"$dir\" $username \"$command\" <$jailfiles"
    echo
    exec ${SRCDIR}execjail -t -l "$linkdir" "$dir" $username "$command" <"$jailfiles"
else
    echo "${SRCDIR}/execjail -t \"$dir\" $username \"$command\" <$jailfiles"
    echo
    exec ${SRCDIR}execjail -t "$dir" $username "$command" <"$jailfiles"
fi
